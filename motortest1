#include <NewPing.h>

// Ultrasonik sensörün bağlı olduğu pinler
const int trigPin = 2;
const int echoPin = 3;

// Sektör yüksekliklerini tanımla
int sectorHeights[] = {5, 10, 15, 20};

// Ultrasonik sensör nesnesi
NewPing sonar(trigPin, echoPin);

void setup() {
  // Serial iletişimi başlat
  Serial.begin(9600);
  
  // Hız kontrol pini ayarla
  pinMode(9, OUTPUT);
  pinMode(10, OUTPUT);
}

void loop() {
  // Sağa dönme fonksiyonunu çağır
  turnRight();
  
  // Değişkenlerin ve sayaçların tanımlanması
  int distance = 0;
  int repeatCount = 0;
  int prevDistance = 0;
  
  // Ultrasonik sensörden mesafe okuma
  while (repeatCount < 10) {
    if (millis() - prevDistance >= 333) {
      prevDistance = millis();
      distance = sonar.ping_cm();
      
      if (distance > 0) {
        if (distance >= sectorHeights[0] - 5 && distance <= sectorHeights[sizeof(sectorHeights) / sizeof(sectorHeights[0])] + 5) {
          distance = roundToNearestMultiple(distance, 10);
          
          if (distance == prevDistance) {
            repeatCount++;
          } else {
            repeatCount = 0;
          }
        }
      }
    }
  }
  
  // Hangi sektörde olduğunu belirle
  int sector = determineSector(distance);
  Serial.print("Current sector: ");
  Serial.println(sector);
}

void turnRight() {
  digitalWrite(9, HIGH);   // IN1
  digitalWrite(10, LOW);   // IN2
  analogWrite(5, 80);   // ENB
}

int determineSector(int distance) {
  for (int i = 0; i < sizeof(sectorHeights) / sizeof(sectorHeights[0]); i++) {
    if (distance <= sectorHeights[i]) {
      return i + 1;
    }
  }
  return -1; // Sektör bulunamadı
}

int roundToNearestMultiple(int num, int multiple) {
  return round(num / multiple) * multiple;
}
